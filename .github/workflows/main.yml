name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Miemiemie!23
          MYSQL_DATABASE: webapp
          MYSQL_USER: beluga
          MYSQL_PASSWORD: Miemiemie!23
        ports:
          - 3306:3306
        #options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Create the users.csv file
      - name: Create users.csv
        run: |
          sudo sh -c 'cat << EOF > /opt/users.csv
          first_name,last_name,email,password
          john,doe,john.doe@example.com,abc123
          jane,doe,jane.doe@example.com,xyz456
          EOF'

      - name: Build with Maven
        run: mvn -e clean install


      - name: Run Tests
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/webapp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
          SPRING_DATASOURCE_USERNAME: beluga
          SPRING_DATASOURCE_PASSWORD: Miemiemie!23

      - name: Continue Deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_DEMO_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_DEMO_SECRET_ACCESS_KEY }}
        run: |
          export MY_AMI_ID=$(aws ec2 describe-images \
          --region us-west-2 \
          --owners self \
          --query "Images | sort_by(@, &CreationDate) | [-1].ImageId" \
          --output text)
          
          LAUNCH_TEMPLATE_NAME="myLaunchTemplate"
          
          NEW_TEMPLATE_VERSION=$(aws ec2 create-launch-template-version --launch-template-name $LAUNCH_TEMPLATE_NAME --source-version '$Latest' --launch-template-data '{"ImageId":"'$LATEST_AMI_ID'"}' --query 'LaunchTemplateVersion.VersionNumber' --output text)
      
          ASG_NAME="your-autoscaling-group-name"
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name $ASG_NAME --launch-template '{"LaunchTemplateName":"'$LAUNCH_TEMPLATE_NAME'", "Version":"'$NEW_TEMPLATE_VERSION'"}'
      
          REFRESH_ID=$(aws autoscaling start-instance-refresh --auto-scaling-group-name $ASG_NAME --strategy 'Rolling' --preferences '{"MinHealthyPercentage":50}' --query 'InstanceRefreshId' --output text)
      
          STATUS="InProgress"
          while [ "$STATUS" != "Successful" ]; do
            STATUS=$(aws autoscaling describe-instance-refreshes --auto-scaling-group-name $ASG_NAME --instance-refresh-ids $REFRESH_ID --query 'InstanceRefreshes[0].Status' --output text)
            echo "Refresh Status: $STATUS"
            if [ "$STATUS" == "Failed" ]; then
              echo "Instance refresh failed"
              exit 1
            fi
            sleep 15
          done

